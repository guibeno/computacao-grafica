def rasterizar_bresanham(ponto_1x,ponto_1y,ponto_2x,ponto_2y):
    valor_x = ponto_2x - ponto_1x # valores finais de x e y
    valor_y = ponto_2y - ponto_1y

    ponto_0 = 2 * valor_y - valor_x # calculo inicial de p0

    x = ponto_1x # pontos iniciais para começar a loop
    y = ponto_1y

    for _ in range (valor_x): # loop dura até o valor total de x pois assumimos que x é maior
        x += 1 # a cada rodada o x anda 1, pois analizamos se valor de y anda ou nao a cada rodada
        
        if ponto_0 < 0: # se p for menor que 0 entao o y nao muda e tentamos achar o valor ideal de p
            ponto_0 += 2 * valor_y
        else:
            y+=1  # se nao (p = > 0) ja consideramos que o y vai andar 1
            ponto_0 += 2 * (valor_y - valor_x) # correção do erro acumulado

        print(f"Pixel: ({x}, {y})")

rasterizar_bresanham(2,2,10,6)
           
